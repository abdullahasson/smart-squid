// Next js
import type { Metadata } from "next";
// Next Intl
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
// Google fonts
import { Almarai, Poppins } from "next/font/google";
// Components
import Header from "@/components/Header"
// import Navbar from "@/components/Navbar"
import Footer from "@/components/Footer"
// style
import "./globals.css";


const almarai = Almarai({
  variable: "--font-almarai",
  subsets: ["arabic"],
  weight: "300"
});

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700", "800", "900"]
});

export const metadata: Metadata = {
  title: "حبار الذكية للدعاية و الأعلان",
  description: "Generated by create next app",
};

// Define the valid locales as a type
type ValidLocale = "en" | "ar";

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {

  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!routing.locales.includes(locale as ValidLocale)) {
    notFound();
  }

  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        dir={locale !== "ar" ? "rtl" : "ltr"}
        className={`${almarai.variable} ${poppins.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>

          <div>
            <Header locale={locale} />
            {/* <Navbar /> */}
            {children}
            <Footer locale={locale} />
          </div>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
